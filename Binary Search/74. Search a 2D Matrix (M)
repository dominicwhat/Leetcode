class Solution(object):
    def searchMatrix(self, matrix, target):
        """
        :type matrix: List[List[int]]
        :type target: int
        :rtype: bool
        """
        l = 0
        r = len(matrix) - 1
        temp = -1
        while l <= r:
            mid = l + (r - l) // 2
            if matrix[mid][-1] < target:
                l = mid + 1
            if matrix[mid][0] > target:
                r = mid - 1
            if matrix[mid][0] <= target <= matrix[mid][-1]:
                temp = mid
                break
        if temp == -1:
            return False

        l = 0
        r = len(matrix[0]) - 1
        arr = matrix[temp]
        while l <= r:
            mid = l + (r - l) // 2
            if arr[mid] < target:
                l = mid + 1
            elif arr[mid] > target:
                r = mid - 1
            else:
                return True
        
        return False

# The condition "if matrix[mid][0] <= target <= matrix[mid][-1]:" takes into consideration both "<=" and ">=" rather than just "<" and ">",
# or you can simply replace it with "else:".
# For example:
# while l <= r:
#     mid = l + (r - l) // 2
#     if matrix[mid][-1] < target:
#         l = mid + 1
#     elif matrix[mid][0] > target:
#         r = mid - 1
#     else:
#         temp = mid
#         break

# https://leetcode.com/problems/search-a-2d-matrix/description/
