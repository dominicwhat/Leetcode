class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        nums.sort()
        res = []
        for start in range(len(nums)-2):
            if nums[start] == nums[start-1] and start > 0:
                continue
            l = start + 1
            r = len(nums)-1
            while l < r:
                if nums[start] + nums[l] + nums[r] > 0:
                    r -= 1
                if nums[start] + nums[l] + nums[r] < 0:
                    l += 1
                if nums[start] + nums[l] + nums[r] == 0 and l < r:
                    res.append([nums[start], nums[l], nums[r]])
                    l += 1
                    r -= 1
                    while nums[l] == nums[l-1] and l < r:
                        l +=1
                    while nums[r] == nums[r+1] and l < r:
                        r -= 1
        return res
# 要考慮 start, r, l 是否有重複的值， start重複的值常會忘了考慮

https://leetcode.com/problems/3sum/
